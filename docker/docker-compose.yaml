version: '3.8'

services:
  # --- Kafka & Zookeeper ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # --- Redis ---
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # --- PostgreSQL: auth, booking, payment ---
  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data

  postgres-booking:
    image: postgres:15
    container_name: postgres-booking
    environment:
      POSTGRES_DB: booking
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_pass
    ports:
      - "5434:5432"
    volumes:
      - postgres-booking-data:/var/lib/postgresql/data

  postgres-payment:
    image: postgres:15
    container_name: postgres-payment
    environment:
      POSTGRES_DB: payment
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass
    ports:
      - "5435:5432"
    volumes:
      - postgres-payment-data:/var/lib/postgresql/data

  # --- MongoDB: user, flight, notification ---
  mongo-user:
    image: mongo:6.0
    container_name: mongo-user
    ports:
      - "27018:27017"
    volumes:
      - mongo-user-data:/data/db

  mongo-flight:
    image: mongo:6.0
    container_name: mongo-flight
    ports:
      - "27019:27017"
    volumes:
      - mongo-flight-data:/data/db

  mongo-notification:
    image: mongo:6.0
    container_name: mongo-notification
    ports:
      - "27020:27017"
    volumes:
      - mongo-notification-data:/data/db

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: unless-stopped
    ports:
      - '9411:9411'

volumes:
  redis-data:
  postgres-auth-data:
  postgres-booking-data:
  postgres-payment-data:
  mongo-user-data:
  mongo-flight-data:
  mongo-notification-data: